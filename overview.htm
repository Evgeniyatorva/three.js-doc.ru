<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>three.js Справочное руководство</title>
<link rel="stylesheet" type="text/css" href="1.css">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<script type="text/javascript" src="1.js"></script>
</head>

<body>
<a href="https://github.com/mrdoob"><img src="img/mrdoob.png" width=150 border=0 align="left" alt="mrdoob"></a>
<div style="color:#000080; margin-left:200px;">Ricardo Cabello</div>
<div style="color:#000080; margin-left:220px;">aka mrdoob</div>

<h1 style="margin-top:40px; margin-left:200px; margin-bottom:40px;">three.js<br>
<span style="font-size:70%; margin-left:20px;">справочное&nbsp;руководство</span></h1>
<br><br>
<em>three.js</em> - это небольшая по размеру кроссбраузерная JavaScript библиотека/API используемая для создания и отображения анимированной трехмерной компьютерной графики в веб-браузере. Скрипты <em>three.js</em> можно использовать в связке с элементом canvas HTML5, SVG или WebGL.<br><br>
В <em>three.js</em> возможно создавать трехмерные анимации, ускоряемые графическим процессором, используя язык JavaScript как часть вебсайта, не полагаясь на собственные плагины браузеров. Это стало возможным благодаря появлению WebGL.<br><br>
Библиотека предоставляет рендереры &lt;canvas&gt;, &lt;svg&gt;, CSS3D и WebGL.<br><br>
<!-- https://ru.wikipedia.org/wiki/Three.js -->
В three.js включены следующие функции:
<div class=blockindent>
<b>Визуализаторы (рендереры):</b> Canvas, SVG и WebGL.<br>
<b>Эффекты:</b> <a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%B3%D0%BB%D0%B8%D1%84" target="_blank">анаглиф</a>,
<span onclick="showClick('Это способ увидеть 3D изображение, используя способность<br>собственных глаз менять фокусное расстояние.<br>Если есть желание попробовать,<br>выполните следующую последовательность действий:'
+'<div class=list>Смотрите на изображение.</div><div class=list>Не отрывая взгляда от изображения, начинайте сдвигать<br>фокусное расстояние ближе к носу (скосите глаза).</div>'
+'<div class=list>Две части изображения начнут накладываться одна<br>на другую, образуя третью, которая появится в центре.</div>'
+'<div class=list>Сосредоточьтесь на появившейся картинке и сфокусируйте<br>на ней взгляд.</div> Если у вас все получилось, то изображение в центре вы увидите<br>трехмерным.')">
<a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('cross-eyed - косоглазие');" onmouseout="hide()">перекрестный взгляд (cross-eyed)</a></span>
и <a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%B0%D1%80%D0%B0%D0%BB%D0%BB%D0%B0%D0%BA%D1%81%D0%BD%D1%8B%D0%B9_%D0%B1%D0%B0%D1%80%D1%8C%D0%B5%D1%80" target="_blank">параллаксный барьер</a> (<a href="https://en.wikipedia.org/wiki/Parallax_barrier" target="_blank">parallax barrier</a>).<br>
<b>Сцены:</b> добавление и удаление объектов во время выполнения; туман<br>
<b>Камеры:</b> перспективная и ортографическая<br>
Контроллеры: <a href="https://ru.wikipedia.org/wiki/%D0%A2%D1%80%D0%B5%D0%BA%D0%B1%D0%BE%D0%BB" target="_blank">трекбол</a>, FPS, path и другие Controllers: trackball, FPS, path and more<br>
<b>Анимация:</b> armatures, forward kinematics, inverse kinematics, morph and keyframe<br>
<b>Освещение:</b> фоновое, направленное, точечное и прожекторное ambient, direction, point and spot lights<br>
<b>Тени:</b> отбрасывание и получение cast and receive<br>
<b>Материалы:</b> PBR, Phong, Lambert, smooth shading, textures and more<br>
<b>Формы:</b> доступ к полноценному языку программирования шейдеров (<a href="https://ru.wikipedia.org/wiki/OpenGL_Shading_Language" target="_blank">OpenGL Shading Language - GLSL</a>)<br>
<b>Capabilities:</b> блики от линз, передача глубины и обширная библиотека пост-обработки lens flare, depth pass and extensive post-processing library<br>
<b>Объекты:</b> сетки (meshes), частицы (particles), спрайты (sprites), линии, ленты (ribbons), кости (bones) и многое другое - все с all with Level of detail<br>
<b>Геометрия:</b> плоскость, куб, сфера, тор, 3D текст и другие<br>
<b>Modifiers:</b> lathe, extrude and tube<br>
<b>Загрузчики данных:</b> бинарный, графический, JSON и сценарный Data loaders: binary, image, JSON and scene<br>
<b>Утилиты:</b> полный набор временны&#769;х и трехмерных математических функций, включая усеченный конус (усеченная параллельными плоскостями часть фигуры), матрицу, Quaternian, UV и другие Utilities: full set of time and 3D math functions including frustum, matrix, Quaternian, UVs and more<br>
<b>Экспорт и импорт:</b> утилиты для создания JSON-файлов, совместимых с <em>three.js</em> из: Blender, openCTM, FBX, Max, и OBJ<br>
<b>Сопровождение:</b> разрабатывается документация по API, общественный форум и вики в полном объеме documentation is under construction, public forum and wiki in full operation<br>
<b>Примеры:</b> Свыше 150 файлов с кодами примеров плюс шрифты, модели, текстуры, звуки и другие поддерживаемые файлы<br>
<b>Отладка:</b> <a href="https://github.com/mrdoob/stats.js/" target="_blank">Stats.js</a>, <a href="https://benvanik.github.io/WebGL-Inspector/" target="_blank">WebGL Inspector</a>, <a href="http://zz85.github.io/zz85-bookmarklets/threelabs.html" target="_blank">Three.js Inspector</a></div>
<em>three.js</em> работает во всех браузерах, поддерживающих WebGL. Выпускается <em>three.js</em> под <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D1%86%D0%B5%D0%BD%D0%B7%D0%B8%D1%8F_MIT" target="_blank">лицензией MIT</a>.
<br><br>
</body></html>