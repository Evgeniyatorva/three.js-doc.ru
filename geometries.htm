<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Three.js</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>
<body>
<h2 class=head1>Геометрические элементы</h2>
<div class=below>В этом разделе рассматриваются стандартные геометрические элементы и их буферные варианты.
<table width=100%>
<tr><td width=50%><div class=list><a href="#2">BoxGeometry</a> - параллелепипед</div>
<div class=list><a href="#4">CircleGeometry</a> - круг</div>
<div class=list><a href="#6">ConeGeometry</a> - конус</div>
<div class=list><a href="#8">CylinderGeometry</a> - цилиндр</div>
<div class=list><a href="#10">DodecahedronGeometry</a> - додекаэдр (двенадцатигранник)</div>
<div class=list><a href="#11">EdgesGeometry</a> - элемент для отображения кромок объекта</div>
<div class=list><a href="#12">ExtrudeGeometry</a> - </div>
<div class=list><a href="#15">IcosahedronGeometry</a> - икосаэдр (двадцатигранник)</div>
<div class=list><a href="#17">LatheGeometry</a> - </div>
<div class=list><a href="#19">OctahedronGeometry</a> - октаэдр (восьмигранник)</div>
<div class=list><a href="#21">ParametricGeometry</a> - </div>
<div class=list><a href="#23">PlaneGeometry</a> - плоскость</div>
<div class=list><a href="#25">PolyhedronGeometry</a> - многогранник</div>
<div class=list><a href="#27">RingGeometry</a> - кольцо</div>
<div class=list><a href="#29">ShapeGeometry</a> - форма</div>
<div class=list><a href="#31">SphereGeometry</a> - сфера</div>
<div class=list><a href="#33">TetrahedronGeometry</a> - тетраэдр (четырехгранник)</div>
<div class=list><a href="#35">TextGeometry</a> - текст</div>
<div class=list><a href="#37">TorusGeometry</a> - тор</div>
<div class=list><a href="#39">TorusKnotGeometry</a> - тор с узлом</div>
<div class=list><a href="#41">TubeGeometry</a> - труба</div>
<div class=list><a href="#42">WireframeGeometry</a> - каркас</div>
</td>
<td width=50%><div class=list><a href="#1">BoxBufferGeometry</a> - параллелепипед</div>
<div class=list><a href="#3">CircleBufferGeometry</a> - круг</div>
<div class=list><a href="#5">ConeBufferGeometry</a> - конус</div>
<div class=list><a href="#7">CylinderBufferGeometry</a> - цилиндр</div>
<div class=list><a href="#9">DodecahedronBufferGeometry</a> - додекаэдр (двенадцатигранник)</div>
<div class=list>&nbsp;</div>
<div class=list><a href="#13">ExtrudeBufferGeometry</a> - </div>
<div class=list><a href="#14">IcosahedronBufferGeometry</a> - икосаэдр (двадцатигранник)</div>
<div class=list><a href="#16">LatheBufferGeometry</a> - </div>
<div class=list><a href="#18">OctahedronBufferGeometry</a> - октаэдр (восьмигранник)</div>
<div class=list><a href="#20">ParametricBufferGeometry</a> - </div>
<div class=list><a href="#22">PlaneBufferGeometry</a> - плоскость</div>
<div class=list><a href="#24">PolyhedronBufferGeometry</a> - многогранник</div>
<div class=list><a href="#26">RingBufferGeometry</a> - кольцо</div>
<div class=list><a href="#28">ShapeBufferGeometry</a> - форма</div>
<div class=list><a href="#30">SphereBufferGeometry</a> - сфера</div>
<div class=list><a href="#32">TetrahedronBufferGeometry</a> - тетраэдр (четырехгранник)</div>
<div class=list><a href="#34">TextBufferGeometry</a> - текст</div>
<div class=list><a href="#36">TorusBufferGeometry</a> - тор</div>
<div class=list><a href="#38">TorusKnotBufferGeometry</a> - тор с узлом</div>
<div class=list><a href="#40">TubeBufferGeometry</a> - труба</div>
<div class=list>&nbsp;</div>
</td></tr></table>




<br><br>
Система координат ...
</div><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="1">BoxBufferGeometry</h3>
Это перенос <a href="#2" onmouseover="show('BoxGeometry');" onmouseout="hide()">BoxGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/BoxGeometry1.png" width=450><br>
Куб с размером стороны равной 20 и числом сегментов по умолчанию, т.е. 1.</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.BoxBufferGeometry( 1, 1, 1 );
var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );</pre><br><br>

<h4>Конструктор</h4>
<pre>BoxBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина');" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота');" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth - глубина');" onmouseout="hide()">depth</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - сегменты (части) по ширине');" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты (части) по высоте');" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth segments - сегменты (части) по глубине');" onmouseout="hide()">depthSegments</a></span> )</pre>
<div class=list><tt>width</tt> — ширина куба, размер сторон по оси <tt>X</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>height</tt> — высота куба, т.е. размер сторон по оси <tt>Y</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>depth</tt> — глубина куба, т.е. размер сторон по оси <tt>Z</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>widthSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по ширине. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>heightSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по высоте. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>depthSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по глубине. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="1parameters" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</pre>
Используем код вышеприведенного примера как основу:
<pre>geometry.parameters; // outputs an object (параметры объекта) {width:1, height:1,
                     // depth:1, widthSegments:undefined, heightSegments:undefined}
  cube.geometry.parameters;              // as above, т.е. как указано выше
  cube.geometry.parameters.width;        // === 1, т.е. ширина равна 1
  cube.geometry.parameters.widthSegments // === undefined, т.е. неопределено и
                                         // используется значение по умолчанию</pre></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/tree/dev/src/geometries/BoxBufferGeometry.js" target="_blank">BoxBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#7" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="2">BoxGeometry</h3>
<tt>BoxGeometry</tt> is the quadrilateral primitive geometry class. Обычно он используется для построения куба или параллелипипеда с размерами, представленными аргументами конструктора <tt>width</tt> - ширина, <tt>height</tt> - высота, и <tt>depth</tt> - глубина.
<div class="caption"><img src="img/BoxGeometry2.png" width=450><br>
Куб со стороной равной 20, разделенной на 4 сегмента.</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.BoxGeometry( 1, 1, 1 );
var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );</pre><br><br>

<h4>Конструктор</h4>
<pre>BoxGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина');" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота');" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth - глубина');" onmouseout="hide()">depth</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - сегменты (части) по ширине');" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты (части) по высоте');" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('depth segments - сегменты (части) по глубине');" onmouseout="hide()">depthSegments</a></span> )</pre>
<div class=list><tt>width</tt> — ширина куба, размер сторон по оси <tt>X</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>height</tt> — высота куба, т.е. размер сторон по оси <tt>Y</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>depth</tt> — глубина куба, т.е. размер сторон по оси <tt>Z</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>widthSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по ширине. По умолчанию значение равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>heightSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по высоте. По умолчанию значение равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>depthSegments</tt> — дополнительный, необязательный параметр. Количество частей, на которые разделяется сторона куба по глубине. По умолчанию значение равно&nbsp;<tt>1</tt>.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="2parameters" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</pre>
Используем код вышеприведенного примера как основу:
<pre>geometry.parameters; // outputs an object (параметры объекта) {width:1, height:1,
                     // depth:1, widthSegments:undefined, heightSegments:undefined}
  cube.geometry.parameters;              // as above, т.е. как указано выше
  cube.geometry.parameters.width;        // === 1, т.е. ширина равна 1
  cube.geometry.parameters.widthSegments // === undefined, т.е. неопределено и
                                         // используется значение по умолчанию</pre></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/tree/dev/src/geometries/BoxGeometry.js" target="_blank">BoxGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="3">CircleBufferGeometry</h3>
Это перенос <a href="#4">CircleGeometry</a> в <a href="core.htm#2">BufferGeometry</a>.
<div class="caption"><img src="img/CircleGeometry1.png" width=500><br>
Круг с радиусом 20 и 32 сегментами, остальные параметры по умолчанию.<br><span style="font-size:80%; font-style:italic;">Обратите внимание на более светлую границу между сегментами, справа.<br>Так обозначен <tt>thetaStart</tt> — начальный угол.</span></div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.CircleBufferGeometry( 5, 32 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var circle = new THREE.Mesh( geometry, material );
scene.add( circle );</pre><br>

<h4>Конструктор</h4>
<pre>CircleBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('segments - сегменты')" onmouseout="hide()">segments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус круга, значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>segments</tt> — число сегментов (треугольников), минимальное значение равно&nbsp;<tt>3</tt>, значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>thetaStart</tt> — начальный угол для первого сегмента, значение по умолчанию равно&nbsp;<tt>0</tt> (положение на 3 часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (часто называемый theta) кругового сектора. Значение по умолчанию равно&nbsp;<tt>2*Pi</tt>, что составляет полный круг.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/CircleGeometry.js" target="_blank">CircleBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="4">CircleGeometry</h3>
CircleGeometry (геометрия круга) это простая форма эвклидовой геометрии. Она формируется из нескольких треугольных сегментов (<tt>segments</tt>), расширяющихся до значения, заданного радиусом (<tt>radius</tt>), и расположенных вокруг центральной точки.
Она строится на заданный центральный угол (<tt>thetaLength</tt>) против часовой стрелки, начинаясь с начального угла (<tt>thetaStart</tt>).
Также этот геометрический элемент может применяться для создания обычных многоугольников, в которых число сегментов определяется количеством сторон.
<div class="caption"><img src="img/CircleGeometry1.png" width=500><br>
Круг с радиусом 20 и 32 сегментами, остальные параметры по умолчанию.<br><span style="font-size:80%; font-style:italic;">Обратите внимание на более светлую границу между сегментами, справа.<br>Так обозначен <tt>thetaStart</tt> — начальный угол.</span></div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.CircleGeometry( 5, 32 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var circle = new THREE.Mesh( geometry, material );
scene.add( circle );</pre><br>

<h4>Конструктор</h4>
<pre>CircleGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('segments - сегменты')" onmouseout="hide()">segments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус круга, значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>segments</tt> — число сегментов (треугольников), минимальное значение равно&nbsp;<tt>3</tt>, значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>thetaStart</tt> — начальный угол для первого сегмента, значение по умолчанию равно&nbsp;<tt>0</tt> (положение на 3 часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (часто называемый theta) кругового сектора. Значение по умолчанию равно&nbsp;<tt>2*Pi</tt>, что составляет полный круг.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/CircleGeometry.js" target="_blank">CircleGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="5">ConeBufferGeometry</h3>
Это перенос <a href="#6" onmouseover="show('ConeGeometry');" onmouseout="hide()">ConeGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/ConeGeometry1.png" width=300><br>Конус</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ConeBufferGeometry( 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var cone = new THREE.Mesh( geometry, material );
scene.add( cone );</pre><br>

<h4>Конструктор</h4><br>
<pre>ConeBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - сегменты по радиусу')" onmouseout="hide()">radiusSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('open ended - открытые (ли) концы')" onmouseout="hide()">openEnded</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус основания конуса. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>height</tt> — высота конуса. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов-граней по окружности конуса. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — число рядов граней по высоте конуса. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>openEnded</tt> — логическое значение, показывающее будет ли основание конуса открытым или закрытым. Значением по умолчанию является <tt>false</tt>, т.е. конус закрыт.</div>
<div class=list><tt>thetaStart</tt> — начальный угол первого сегмента в основании конуса, значение по умолчанию равно&nbsp;<tt>0</tt> (позиция на три часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (зачастую называемый <tt>theta</tt> - тэта) сектора круга в основании конуса. По умолчанию равен&nbsp;<tt>2*Pi</tt>, что делает конус завершенным.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ConeBufferGeometry.js" target="_blank">ConeBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="6">ConeGeometry</h3>
Класс для построения конических фигур.
<div class="caption"><img src="img/ConeGeometry2.png" width=300><br>Конус</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ConeGeometry( 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var cone = new THREE.Mesh( geometry, material );
scene.add( cone );</pre>

<h4>Конструктор</h4>
<pre>ConeGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - сегменты по радиусу')" onmouseout="hide()">radiusSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('open ended - открытые (ли) концы')" onmouseout="hide()">openEnded</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус основания конуса, значение по умолчанию равно&nbsp;<tt>20</tt>.</div>
<div class=list><tt>height</tt> — высота конуса, значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов-граней по окружности конуса, значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — число рядов граней по высоте конуса. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>openEnded</tt> — логическое значение, показывающее будет ли основание конуса открытым или закрытым. Значением по умолчанию является <tt>false</tt>, т.е. конус закрыт.</div>
<div class=list><tt>thetaStart</tt> — начальный угол первого сегмента в основании конуса, значение по умолчанию равно&nbsp;<tt>0</tt> (позиция на три часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (зачастую называемый <tt>theta</tt> - тэта) сектора круга в основании конуса. По умолчанию равен&nbsp;<tt>2*Pi</tt>, что делает конус завершенным.</div><br>

<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ConeGeometry.js" target="_blank">ConeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="7">CylinderBufferGeometry</h3>
Это перенос <a href="#8" onmouseover="show('CylinderGeometry');" onmouseout="hide()">CylinderGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/CylinderGeometry1.png" width=300><br>
Цилиндр с шестью гранями и закрытыми основаниями</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.CylinderBufferGeometry( 5, 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var cylinder = new THREE.Mesh( geometry, material );
scene.add( cylinder );</pre><br>

<h4>Конструктор</h4><br>
<pre>CylinderBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius top - радиус верха (цилиндра)')" onmouseout="hide()">radiusTop</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius bottom - радиус низа (цилиндра)')" onmouseout="hide()">radiusBottom</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - сегменты по радиусу')" onmouseout="hide()">radiusSegments</a></span>,
                        <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('open ended - открытые концы')" onmouseout="hide()">openEnded</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта (&#952;)')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта (&#952;)')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radiusTop</tt> — радиус цилиндра по верху. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusBottom</tt> — радиус цилиндра по низу. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>height</tt> — высота цилиндра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов-граней по окружности цилиндра. Значение по умолчанию равно <tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — число рядов граней по высоте цилиндра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>openEnded</tt> — логическое значение, показывающее будут ли основания цилиндра открытыми или закрытыми. Значением по умолчанию является <tt>false</tt>, т.е. цилиндр закрыт.</div>
<div class=list><tt>thetaStart</tt> — начальный угол первого сегмента в основании цилиндра, значение по умолчанию равно&nbsp;<tt>0</tt> (позиция на три часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (зачастую называемый <tt>theta</tt> - тэта) сектора круга в основании цилиндра. По умолчанию равен&nbsp;<tt>2*Pi</tt>, что делает цилиндр завершенным.</div><br>

<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/CylinderBufferGeometry.js" target="_blank">CylinderBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="8">CylinderGeometry</h3>
Класс для построения фигур цилиндрической формы.
<div class="caption"><img src="img/CylinderGeometry2.png" width=300><br>
Цилиндр с открытыми основаниями с 16 сегментами-гранями по окружности и четырьмя сегментами по высоте</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.CylinderGeometry( 5, 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var cylinder = new THREE.Mesh( geometry, material );
scene.add( cylinder );</pre><br>

<h4>Конструктор</h4><br>
<pre>CylinderGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius top - радиус верха (цилиндра)')" onmouseout="hide()">radiusTop</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius bottom - радиус низа (цилиндра)')" onmouseout="hide()">radiusBottom</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - сегменты по радиусу')" onmouseout="hide()">radiusSegments</a></span>,
                  <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('open ended - открытые концы')" onmouseout="hide()">openEnded</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начало (угла) тэта (&#952;)')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина (дуги угла) тэта (&#952;)')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radiusTop</tt> — радиус цилиндра по верху. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusBottom</tt> — радиус цилиндра по низу. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>height</tt> — высота цилиндра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов-граней по окружности цилиндра. Значение по умолчанию равно <tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — число рядов граней по высоте цилиндра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>openEnded</tt> — логическое значение, показывающее будут ли основания цилиндра открытыми или закрытыми. Значением по умолчанию является <tt>false</tt>, т.е. цилиндр закрыт.</div>
<div class=list><tt>thetaStart</tt> — начальный угол первого сегмента в основании цилиндра, значение по умолчанию равно&nbsp;<tt>0</tt> (позиция на три часа).</div>
<div class=list><tt>thetaLength</tt> — центральный угол (зачастую называемый <tt>theta</tt> - тэта) сектора круга в основании цилиндра. По умолчанию равен&nbsp;<tt>2*Pi</tt>, что делает цилиндр завершенным.</div><br>

<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/CylinderGeometry.js" target="_blank">CylinderGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#24" title="Переход к родительскому классу"><tt>PolyhedronBufferGeometry &rarr;</tt></a></span>
<h3 id="9">DodecahedronBufferGeometry</h3>
Класс для построения геометрических фигур в виде додекаэдра (двенадцатигранника).
<div class="caption"><img src="img/DodecahedronGeometry.png" width=300><br>Додекаэдр</div><br>

<h4>Конструктор</h4><br>
<pre>DodecahedronBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус додекаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не додекаэдр.</div>
<div class="caption"><img src="img/DodecahedronGeometry1.png" width=300><br>
При установке значения аргумента <tt>detail</tt> равным <tt>3</tt>,<br>получается вот такой &#171;додекаэдр&#187;.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="9parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/DodecahedronBufferGeometry.js" target="_blank">DodecahedronBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="10">DodecahedronGeometry</h3>
Класс для построения геометрических фигур в виде додекаэдра (двенадцатигранника).
<div class="caption"><img src="img/DodecahedronGeometry.png" width=300><br>
Додекаэдр</div><br>

<h4>Конструктор</h4><br>
<pre>DodecahedronGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус додекаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не додекаэдр.</div>
<div class="caption"><img src="img/DodecahedronGeometry1.png" width=300><br>
При установке значения аргумента <tt>detail</tt> равным <tt>3</tt>,<br>получается вот такой &#171;додекаэдр&#187;.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="10parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/DodecahedronGeometry.js" target="_blank">DodecahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="11">EdgesGeometry</h3>
Этот объект может использоваться в качестве вспомогательного для отображения кромок <a href="core.htm#7" onmouseover="show('Geometry')" onmouseout="hide()">геометрического</a> объекта.<br><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.BoxBufferGeometry( 100, 100, 100 );
var edges = new THREE.EdgesGeometry( geometry );
var line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xffffff } ) );
scene.add( line );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_helpers" target="_blank">helpers</a></pre><br>

<h4>Конструктор</h4>
<pre>EdgesGeometry( <a href="core.htm#7" onmouseover="show('Geometry')" onmouseout="hide()">geometry</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('threshold angle - пороговый угол')" onmouseout="hide()">thresholdAngle</a></span> )</pre>
<div class=list><tt>geometry</tt> — любой геометрический объект.</div>
<div class=list><tt>thresholdAngle</tt> — кромка отображается только в том случае, если угол (в градусах) между нормалями соседних граней превышает данное значение. По умолчанию оно равно&nbsp;<tt>1</tt> градусу.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/EdgesGeometry.js" target="_blank">EdgesGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="12">ExtrudeGeometry</h3>
Создает рельефный (выдавленный) геометрический элемент по контурной фигуре.
<div class="caption"><img src="img/ExtrudeGeometry.png" width=500><br>ExtrudeGeometry</div><br>

<h4>Пример</h4>
<pre>var length = 12, width = 8;<br>
var shape = new THREE.Shape();
shape.moveTo( 0,0 );
shape.lineTo( 0, width );
shape.lineTo( length, width );
shape.lineTo( length, 0 );
shape.lineTo( 0, 0 );<br>
var extrudeSettings = {
  steps: 2,
  amount: 16,
  bevelEnabled: true,
  bevelThickness: 1,
  bevelSize: 1,
  bevelSegments: 1
};<br>
var geometry = new THREE.ExtrudeGeometry( shape, data );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material ) ;
scene.add( mesh );</pre><br>

<h4>Конструктор</h4><br>
<pre>ExtrudeGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - форма')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>shapes</tt> — форма или массив форм.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).
<div class=note_trans><b>Примечание переводчика:</b> Прямая, перпендикулярная касательной и проходящая через точку касания, называется нормалью к кривой.
Плоскость, перпендикулярная касательной в данной точке кривой, называется нормальной плоскостью; все нормали для данной точки лежат в нормальной плоскости.
Нормаль, лежащую в соприкасающейся плоскости, называют главной нормалью, а нормаль, перпендикулярная соприкасающейся плоскости, называется бинормалью.</div></div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Данный объект выдавливается двухмерной формой на трехмерном геометрическом элементе.<br>
При создании сетки (Mesh) с этим геометрическим элементов, если требуются отдельные материалы для собственно грани и для сторон рельефа, можно использовать массив материалов.
Первый материал будет применен к грани; второй будет применен к сторонам рельефа.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="12addShapeList"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add shape list - добавить список форм')" onmouseout="hide()">.addShapeList</a></span>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - форма')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>shapes</tt> — массив добавляемых форм.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Метод добавляет формы в список на выдавливание.<br><br>

<pre id="12addShape"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add shape - добавить форму')" onmouseout="hide()">addShape</a></span>( <a href="extras.htm#" onclick="return false" onblur="hideClick()" onmouseover="show('Shape.<br>shape - форма')" onmouseout="hide()">shape</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list>shape — добавляемая форма.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Метод добавляет форму в список на выдавливание.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ExtrudeGeometry.js" target="_blank">ExtrudeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="13">ExtrudeBufferGeometry</h3><br><br>
Создает рельефный (выдавленный) элемент BufferGeometry по контурной фигуре.
<div class="caption"><img src="img/ExtrudeGeometry.png" width=500><br>ExtrudeGeometry</div><br>

<h4>Пример</h4>
<pre>var length = 12, width = 8;<br>
var shape = new THREE.Shape();
shape.moveTo( 0,0 );
shape.lineTo( 0, width );
shape.lineTo( length, width );
shape.lineTo( length, 0 );
shape.lineTo( 0, 0 );<br>
var extrudeSettings = {
  steps: 2,
  amount: 16,
  bevelEnabled: true,
  bevelThickness: 1,
  bevelSize: 1,
  bevelSegments: 1
};<br>
var geometry = new THREE.ExtrudeBufferGeometry( shape, extrudeSettings );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material ) ;
scene.add( mesh );</pre><br>

<h4>Конструктор</h4><br>
<pre>ExtrudeBufferGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - форма')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>shapes</tt> — форма или массив форм.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).
<div class=note_trans><b>Примечание переводчика:</b> Прямая, перпендикулярная касательной и проходящая через точку касания, называется нормалью к кривой.
Плоскость, перпендикулярная касательной в данной точке кривой, называется нормальной плоскостью; все нормали для данной точки лежат в нормальной плоскости.
Нормаль, лежащую в соприкасающейся плоскости, называют главной нормалью, а нормаль, перпендикулярная соприкасающейся плоскости, называется бинормалью.</div></div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Данный объект выдавливается двухмерной формой на трехмерном геометрическом элементе.<br>
При создании сетки (Mesh) с этим геометрическим элементов, если требуются отдельные материалы для собственно грани и для сторон рельефа, можно использовать массив материалов.
Первый материал будет применен к грани; второй будет применен к сторонам рельефа.<br><br>

<h4>Свойства</h4>
<br><br>

<h4>Методы</h4>
<div class=blockindent><br>
<pre id="13addShapeList"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add shape list - добавить список форм')" onmouseout="hide()">.addShapeList</a></span>( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - форма')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list><tt>shapes</tt> — массив добавляемых форм.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Метод добавляет формы в список на выдавливание.<br><br>

<pre id="13addShape"><span onclick="showClick(type_null)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('add shape - добавить форму')" onmouseout="hide()">addShape</a></span>( <a href="extras.htm#" onclick="return false" onblur="hideClick()" onmouseover="show('Shape.<br>shape - форма')" onmouseout="hide()">shape</a>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('options - параметры, опции, варианты')" onmouseout="hide()">options</a></span> )</pre>
<div class=list>shape — добавляемая форма.</div>
<div class=list><tt>options</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - сегменты (части) кривой')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('steps - шаги')" onmouseout="hide()">steps</a></span></tt>
— количество точек для разделения сегментов по глубине выдавленного <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BB%D0%B0%D0%B9%D0%BD" target="_blank">сплайна</a>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('amount - количество, сумма')" onmouseout="hide()">amount</a></span></tt>
— глубина выдавливания (рельефа) фигуры. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - включить скос, фаску')" onmouseout="hide()">bevelEnabled</a></span></tt>
— разрешить ли фаску (скос). Значением по умолчанию является&nbsp;<tt>true</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина скоса, фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко входит фаска в исходную форму. Значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер скоса, фаски')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выходит рельеф из контура фигуры или расстояние от контура формы, на которое простирается рельеф. Значением по умолчанию является <tt>bevelThickness - 2</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты скоса')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество слоев фаски. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<div class=list><tt>extrudePath</tt> — <tt><a href="extras.htm#3.2" onmouseover="show('THREE.CurvePat')" onmouseout="hide()">THREE.CurvePath</a></tt>.
Трехмерный сплайн контура, по которому выдавливается форма (создает Frames, если <tt>frames</tt> не определены).</div>
<div class=list><tt>frames</tt> — объект, содержащий массивы касательных, нормалей, бинормалей для каждого шага (<tt>step</tt>) вдоль выдавливаемого контура (extrudePath).</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('material - материал')" onmouseout="hide()">material</a></span></tt>
— индекс материала для передней и задней граней.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('extrude material - ')" onmouseout="hide()">extrudeMaterial</a></span></tt>
— индекс материала для выдавленных и скошенных граней.</div>
<div class=list><tt><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('UV generator - генератор координат U V')" onmouseout="hide()">UVGenerator</a></span></tt> — объект, который обеспечивает функции генератора координат UV.</div></div>
Метод добавляет форму в список на выдавливание.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ExtrudeGeometry.js" target="_blank">ExtrudeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#24" title="Переход к родительскому классу"><tt>PolyhedronBufferGeometry &rarr;</tt></a></span>
<h3 id="14">IcosahedronBufferGeometry</h3>
Класс для построения геометрического элемента икосаэдра - двадцатигранника.
<div class="caption"><img src="img/IcosahedronGeometry.png" width=350><br>Икосаэдр</div><br>

<h4>Конструктор</h4>
<pre>IcosahedronBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус икосаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не икосаэдр. При <tt>detail</tt> больше <tt>1</tt> это уже фактически сфера.</div>
<div class="caption"><img src="img/IcosahedronGeometry1.png" width=350><br>
"Икосаэдр" со значением <tt>detail</tt> равном <tt>3</tt></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="14parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/IcosahedronGeometry.js" target="_blank">IcosahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="15">IcosahedronGeometry</h3>
Класс для построения геометрического элемента икосаэдра - двадцатигранника.
<div class="caption"><img src="img/IcosahedronGeometry.png" width=350><br>Икосаэдр</div><br>

<h4>Конструктор</h4>
<pre>IcosahedronGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус икосаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не икосаэдр. При <tt>detail</tt> больше <tt>1</tt> это уже фактически сфера.</div>
<div class="caption"><img src="img/IcosahedronGeometry1.png" width=350><br>
"Икосаэдр" со значением <tt>detail</tt> равном <tt>3</tt></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="15parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/IcosahedronGeometry.js" target="_blank">IcosahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="16">LatheBufferGeometry</h3>
Это перенос <a href="#17" onmouseover="show('LatheGeometry');" onmouseout="hide()">LatheGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/LatheGeometry.png" width=500><br>Lathe</div><br>

<h4>Пример</h4>
<pre>var points = [];
for ( var i = 0; i &#60; 10; i ++ ) {
	points.push( new THREE.Vector2( Math.sin( i * 0.2 ) * 10 + 5, ( i - 5 ) * 2 ) );
}
var geometry = new THREE.LatheBufferGeometry( points );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var lathe = new THREE.Mesh( geometry, material );
scene.add( lathe );</pre>

<h4>Конструктор</h4>
<pre>LatheBufferGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('segments - части, сегменты')" onmouseout="hide()">segments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi start - начало (центрального угла),<br>обозначенного греческой<br>буквой фи - &#966;')" onmouseout="hide()">phiStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi length - длина дуги окружности (центральный угол')" onmouseout="hide()">phiLength</a></span> )</pre>
<div class=list><tt>points</tt> — массив <a href="math.htm#18" onmouseover="show('Vector2')" onmouseout="hide()">двумерных векторов</a>. Координата <tt>x</tt> каждой точки должна быть больше нуля.</div>
<div class=list><tt>segments</tt> — количество сегментов по окружности создаваемого объекта. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt>phiStart</tt> — начальный угол, в радианах. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>phiLength</tt> — длина окружности, в радианах (в диапазоне от <tt>0</tt> до <tt>2PI</tt>). Значение равное <tt>2PI</tt> означает, что окружность замкнута, менее <tt>2PI</tt> - часть окружности. Значение по умолчанию равно&nbsp;<tt>2PI</tt>.</div>
Данный конструктор на основе заданных параметров создает LatheBufferGeometry.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/LatheGeometry.js" target="_blank">LatheGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="17">LatheGeometry</h3>
Класс для построения сеток (Mesh) с осевой симметрией. Возможное применение включает вазы, трубы, пончики и т.д. Вращение происходит вокруг вертикальной оси&nbsp;Y.
<div class=note_trans><b>Примечание переводчика:</b> в переводе на русский язык lathe - станок, а конкретнее - токарный станок. То есть, подразумевается что данный класс позволяет создавать объекты подобно токарному станку.</div>
<div class="caption"><img src="img/LatheGeometry.png" width=500><br>Lathe</div><br>

<h4>Пример</h4>
<pre>var points = [];
for ( var i = 0; i &#60; 10; i ++ ) {
	points.push( new THREE.Vector2( Math.sin( i * 0.2 ) * 10 + 5, ( i - 5 ) * 2 ) );
}
var geometry = new THREE.LatheGeometry( points );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var lathe = new THREE.Mesh( geometry, material );
scene.add( lathe );</pre>

<h4>Конструктор</h4>
<pre>LatheGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('points - точки')" onmouseout="hide()">points</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('segments - части, сегменты')" onmouseout="hide()">segments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi start - начало (центрального угла),<br>обозначенного греческой<br>буквой фи - &#966;')" onmouseout="hide()">phiStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi length - длина дуги окружности (центральный угол')" onmouseout="hide()">phiLength</a></span> )</pre>
<div class=list><tt>points</tt> — массив <a href="math.htm#18" onmouseover="show('Vector2')" onmouseout="hide()">двумерных векторов</a>. Координата <tt>x</tt> каждой точки должна быть больше нуля.</div>
<div class=list><tt>segments</tt> — количество сегментов по окружности создаваемого объекта. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt>phiStart</tt> — начальный угол, в радианах. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>phiLength</tt> — длина окружности, в радианах (в диапазоне от <tt>0</tt> до <tt>2PI</tt>). Значение равное <tt>2PI</tt> означает, что окружность замкнута, менее <tt>2PI</tt> - часть окружности. Значение по умолчанию равно&nbsp;<tt>2PI</tt>.</div>
Данный конструктор на основе заданных параметров создает LatheBufferGeometry.<br><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/LatheGeometry.js" target="_blank">LatheGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#24" title="Переход к родительскому классу"><tt>PolyhedronBufferGeometry &rarr;</tt></a></span>
<h3 id="18">OctahedronBufferGeometry</h3>
Класс для построения геометрического элемента октаэдра - восьмигранника.
<div class="caption"><img src="img/OctahedronGeometry.png" width=300><br>Октаэдр</div><br>

<h4>Конструктор</h4>
<pre>OctahedronBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус октаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не октаэдр.</div>
<div class="caption"><img src="img/OctahedronGeometry1.png" width=350><br>
"Октаэдр" со значением <tt>detail</tt> равном <tt>3</tt></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="18parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/OctahedronGeometry.js" target="_blank">OctahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="19">OctahedronGeometry</h3>
Класс для построения геометрического элемента октаэдра - восьмигранника.
<div class="caption"><img src="img/OctahedronGeometry.png" width=300><br>Октаэдр</div><br>

<h4>Конструктор</h4>
<pre>OctahedronGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус октаэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не октаэдр.</div>
<div class="caption"><img src="img/OctahedronGeometry1.png" width=350><br>
"Октаэдр" со значением <tt>detail</tt> равном <tt>3</tt></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="19parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для построения этой геометрической фигуры.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/OctahedronGeometry.js" target="_blank">OctahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="20">ParametricBufferGeometry</h3>
Формирует геометрический элемент, представляющий параметрическую поверхность.
<div class="caption"><img src="img/ParametricGeometry.png" width=250><br>Parametric</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ParametricBufferGeometry( THREE.ParametricGeometries.klein, 25, 25 );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );</pre>

<h4>Конструктор</h4>
<pre>ParametricBufferGeometry( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('func - сокращ. англ. слова function - функция')" onmouseout="hide()">func</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slices - ломтики, доли')" onmouseout="hide()">slices</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stacks - ')" onmouseout="hide()">stacks</a></span> )</pre>
<div class=list><tt>func</tt> — функция, принимающая значения <tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('u')" onmouseout="hide()">u</a></span></tt>
и <tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('v')" onmouseout="hide()">v</a></span></tt>, каждое из которых находится в пределах от <tt>0</tt> до <tt>1</tt>,
и возвращает <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерный вектор</a>.</div>
<div class=list><tt>slices</tt> — число долей, используемых для параметрических функции.</div>
<div class=list><tt>stacks</tt> — количество элементов, используемых для параметрических функции.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ParametricGeometry.js" target="_blank">ParametricGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="21">ParametricGeometry</h3>
Формирует геометрический элемент, представляющий параметрическую поверхность.
<div class="caption"><img src="img/ParametricGeometry.png" width=250><br>Parametric</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.ParametricGeometry( THREE.ParametricGeometries.klein, 25, 25 );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var klein = new THREE.Mesh( geometry, material );
scene.add( klein );</pre>

<h4>Конструктор</h4>
<pre>ParametricGeometry( <span onclick="showClick(type_func)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('func - сокращ. англ. слова function - функция')" onmouseout="hide()">func</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('slices - ломтики, доли')" onmouseout="hide()">slices</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('stacks - ')" onmouseout="hide()">stacks</a></span> )</pre>
<div class=list><tt>func</tt> — функция, принимающая значения <tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('u')" onmouseout="hide()">u</a></span></tt>
и <tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('v')" onmouseout="hide()">v</a></span></tt>, каждое из которых находится в пределах от <tt>0</tt> до <tt>1</tt>,
и возвращает <a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">трехмерный вектор</a>.</div>
<div class=list><tt>slices</tt> — число долей, используемых для параметрических функции.</div>
<div class=list><tt>stacks</tt> — количество элементов, используемых для параметрических функции.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ParametricGeometry.js" target="_blank">ParametricGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="22">PlaneBufferGeometry</h3>
Это перенос <a href="#23" onmouseover="show('PlaneGeometry');" onmouseout="hide()">PlaneGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/PlaneGeometry.png" width=350><br>PlaneGeometry</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.PlaneBufferGeometry( 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );
var plane = new THREE.Mesh( geometry, material );
scene.add( plane );</pre><br>

<h4>Конструктор</h4><br>
<pre>PlaneBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - сегменты по ширине')" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span> )</pre>
<div class=list><tt>width</tt> — ширина по оси <tt>X</tt>.</div>
<div class=list><tt>height</tt> — высота по оси <tt>Y</tt>.</div>
<div class=list><tt>widthSegments</tt> — количество сегментов (частей) по ширине (дополнительный, необязательный параметр). По умолчанию равен <tt>1</tt>.</div>
<div class=list><tt>heightSegments</tt> — количество сегментов по высоте (дополнительный, необязательный параметр). По умолчанию равен <tt>1</tt>.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/PlaneGeometry.js" target="_blank">PlaneBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="23">PlaneGeometry</h3>
Класс для построения плоских геометрических фигур.
<div class="caption"><img src="img/PlaneGeometry.png" width=350><br>PlaneGeometry</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.PlaneGeometry( 5, 20, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} );
var plane = new THREE.Mesh( geometry, material );
scene.add( plane );</pre><br>

<h4>Конструктор</h4><br>
<pre>PlaneBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width - ширина')" onmouseout="hide()">width</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - сегменты по ширине')" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - сегменты по высоте')" onmouseout="hide()">heightSegments</a></span> )</pre>
<div class=list><tt>width</tt> — ширина по оси <tt>X</tt>.</div>
<div class=list><tt>height</tt> — высота по оси <tt>Y</tt>.</div>
<div class=list><tt>widthSegments</tt> — количество сегментов (частей) по ширине (дополнительный, необязательный параметр). По умолчанию равен <tt>1</tt>.</div>
<div class=list><tt>heightSegments</tt> — количество сегментов по высоте (дополнительный, необязательный параметр). По умолчанию равен <tt>1</tt>.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/PlaneGeometry.js" target="_blank">PlaneGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="24">PolyhedronBufferGeometry</h3>
PolyhedronBufferGeometry представляет собой трехмерный объект (многогранник) с плоскими гранями. Этот класс принимает массив вершин, проецирует их на сферу и затем делит их на желаемый уровень детализации.<br>
Этот класс используется <a href="#9">DodecahedronBufferGeometry</a>, <a href="#14">IcosahedronBufferGeometry</a>, <a href="#18">OctahedronBufferGeometry</a> и <a href="#32">TetrahedronBufferGeometry</a> для создания соответствующих геометрических элементов.to generate their respective geometries.<br><br>

<h4>Пример</h4>
<pre>var verticesOfCube = [
  -1,-1,-1,    1,-1,-1,    1, 1,-1,    -1, 1,-1,
  -1,-1, 1,    1,-1, 1,    1, 1, 1,    -1, 1, 1,
];<br>
var indicesOfFaces = [
  2,1,0,    0,3,2,
  0,4,7,    7,3,0,
  0,1,5,    5,4,0,
  1,2,6,    6,5,1,
  2,3,7,    7,6,2,
  4,5,6,    6,7,4
];<br>
var geometry = new THREE.PolyhedronBufferGeometry( verticesOfCube, indicesOfFaces, 6, 2 );</pre>

<h4>Конструктор</h4>
<pre>PolyhedronBufferGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertices - вершины')" onmouseout="hide()">vertices</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('indices - индексы')" onmouseout="hide()">indices</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>vertices</tt> — массив точек в виде <tt>[1,1,1, -1,-1,-1, ... ]</tt></div>
<div class=list><tt>indices</tt> — массив индексов, составляющих грани в виде <tt>[0,1,2, 2,3,0, ... ]</tt></div>
<div class=list><tt>radius</tt> — радиус получаемого объекта</div>
<div class=list><tt>detail</tt> — количество уровней, на которые подразделяется геометрический элемент. Чем больше <tt>detail</tt>, тем глаже форма получаемого объекта, т.е. тем ближе к сфере.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="24parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для создания геометрического элемента.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/PolyhedronBufferGeometry.js" target="_blank">PolyhedronBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="25">PolyhedronGeometry</h3>
PolyhedronGeometry представляет собой трехмерный объект (многогранник) с плоскими гранями. Этот класс принимает массив вершин, проецирует их на сферу и затем делит их на желаемый уровень детализации.<br><br>

<h4>Пример</h4>
<pre>var verticesOfCube = [
  -1,-1,-1,    1,-1,-1,    1, 1,-1,    -1, 1,-1,
  -1,-1, 1,    1,-1, 1,    1, 1, 1,    -1, 1, 1,
];<br>
var indicesOfFaces = [
  2,1,0,    0,3,2,
  0,4,7,    7,3,0,
  0,1,5,    5,4,0,
  1,2,6,    6,5,1,
  2,3,7,    7,6,2,
  4,5,6,    6,7,4
];<br>
var geometry = new THREE.PolyhedronGeometry( verticesOfCube, indicesOfFaces, 6, 2 );</pre><br>

<h4>Конструктор</h4>
<pre>PolyhedronGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('vertices - вершины')" onmouseout="hide()">vertices</a></span>, <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('indices - индексы')" onmouseout="hide()">indices</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>vertices</tt> — массив точек в виде <tt>[1,1,1, -1,-1,-1, ... ]</tt></div>
<div class=list><tt>indices</tt> — массив индексов, составляющих грани в виде <tt>[0,1,2, 2,3,0, ... ]</tt></div>
<div class=list><tt>radius</tt> — радиус получаемого объекта</div>
<div class=list><tt>detail</tt> — количество уровней, на которые подразделяется геометрический элемент. Чем больше <tt>detail</tt>, тем глаже форма получаемого объекта, т.е. тем ближе к сфере.</div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="25parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для создания геометрического элемента.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/PolyhedronGeometry.js" target="_blank">PolyhedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="26">RingBufferGeometry</h3>
Это перенос <a href="#27" onmouseover="show('RingGeometry');" onmouseout="hide()">RingGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/RingGeometry.png" width=350><br>Кольцо</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.RingBufferGeometry( 1, 5, 32 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00, side: THREE.DoubleSide } );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre>

<h4>Конструктор</h4>
<pre>RingBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('inner radius - внутренний радиус')" onmouseout="hide()">innerRadius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('outer radius - наружный радиус')" onmouseout="hide()">outerRadius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta segments - сегменты по углу тэта, т.е. по окружности')" onmouseout="hide()">thetaSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi segments - сегменты по углу фи, т.е. по радиусу')" onmouseout="hide()">phiSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начальный угол тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина дуги по углу тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>innerRadius</tt> — внутренний радиус кольца. Значение по умолчанию равно&nbsp;<tt>0.5</tt>.</div>
<div class=list><tt>outerRadius</tt> — наружный радиус кольца. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>thetaSegments</tt> — число сегментов по окружности кольца. Чем больше число сегментов, тем более круглым будет кольцо. Минимальное значение равно&nbsp;<tt>3</tt>. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>phiSegments</tt> — число сегментов по радиусу кольца (в толщину). Минимальное значение равно&nbsp;<tt>1</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>thetaStart</tt> — начальный угол. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>thetaLength</tt> — центральный угол. Значение по умолчанию равно&nbsp;<tt>Math.PI&nbsp;*&nbsp;2</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/RingGeometry.js" target="_blank">RingGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="27">RingGeometry</h3>
Класс для построения двумерной кольцевой фигуры.
<div class="caption"><img src="img/RingGeometry.png" width=350><br>Кольцо</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.RingGeometry( 1, 5, 32 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00, side: THREE.DoubleSide } );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre>

<h4>Конструктор</h4>
<pre>RingGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('inner radius - внутренний радиус')" onmouseout="hide()">innerRadius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('outer radius - наружный радиус')" onmouseout="hide()">outerRadius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta segments - сегменты по углу тэта, т.е. по окружности')" onmouseout="hide()">thetaSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi segments - сегменты по углу фи, т.е. по радиусу')" onmouseout="hide()">phiSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - начальный угол тэта')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - длина дуги по углу тэта')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>innerRadius</tt> — внутренний радиус кольца. Значение по умолчанию равно&nbsp;<tt>0.5</tt>.</div>
<div class=list><tt>outerRadius</tt> — наружный радиус кольца. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>thetaSegments</tt> — число сегментов по окружности кольца. Чем больше число сегментов, тем более круглым будет кольцо. Минимальное значение равно&nbsp;<tt>3</tt>. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>phiSegments</tt> — число сегментов по радиусу кольца (в толщину). Минимальное значение равно&nbsp;<tt>1</tt>. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>thetaStart</tt> — начальный угол. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>thetaLength</tt> — центральный угол. Значение по умолчанию равно&nbsp;<tt>Math.PI&nbsp;*&nbsp;2</tt>.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/RingGeometry.js" target="_blank">RingGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="28">ShapeBufferGeometry</h3>
Создает односторонний многоугольный геометрический элемент из одной или нескольких контурных фигур.
<div class="caption"><img src="img/ShapeGeometry.png" width=300><br>
Геометрическая форма с числом сегментов по умолчанию, т.е. 12.</div><br>

<h4>Пример</h4>
<pre>var x = 0, y = 0;<br>
var heartShape = new THREE.Shape();<br>
heartShape.moveTo( x + 5, y + 5 );
heartShape.bezierCurveTo( x + 5, y + 5, x + 4, y, x, y );
heartShape.bezierCurveTo( x - 6, y, x - 6, y + 7,x - 6, y + 7 );
heartShape.bezierCurveTo( x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19 );
heartShape.bezierCurveTo( x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7 );
heartShape.bezierCurveTo( x + 16, y + 7, x + 16, y, x + 10, y );
heartShape.bezierCurveTo( x + 7, y, x + 5, y + 5, x + 5, y + 5 );<br>
var geometry = new THREE.ShapeBufferGeometry( heartShape );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material ) ;
scene.add( mesh );</pre>

<h4>Конструктор</h4>
<pre>ShapeBufferGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - формы')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - число сегментов кривой')" onmouseout="hide()">curveSegments</a></span> )</pre>
<div class=list><tt>shapes</tt> — массив форм или одиночная <a href="extras.htm#3.6" onmouseover="show('Shape')" onmouseout="hide()">форма</a>.</div>
<div class=list><tt>curveSegments</tt> — число сегментов в форме - значение по умолчанию равно <tt>12</tt></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ShapeBufferGeometry.js" target="_blank">ShapeBufferGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="29">ShapeGeometry</h3>
Создает односторонний многоугольный геометрический элемент из одной или нескольких контурных фигур.
<div class="caption"><img src="img/ShapeGeometry.png" width=300><br>
Геометрическая форма с числом сегментов по умолчанию, т.е. 12.</div><br>

<h4>Пример</h4>
<pre>var x = 0, y = 0;<br>
var heartShape = new THREE.Shape();<br>
heartShape.moveTo( x + 5, y + 5 );
heartShape.bezierCurveTo( x + 5, y + 5, x + 4, y, x, y );
heartShape.bezierCurveTo( x - 6, y, x - 6, y + 7,x - 6, y + 7 );
heartShape.bezierCurveTo( x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19 );
heartShape.bezierCurveTo( x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7 );
heartShape.bezierCurveTo( x + 16, y + 7, x + 16, y, x + 10, y );
heartShape.bezierCurveTo( x + 7, y, x + 5, y + 5, x + 5, y + 5 );<br>
var geometry = new THREE.ShapeGeometry( heartShape );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material ) ;
scene.add( mesh );</pre>

<h4>Конструктор</h4>
<pre>ShapeGeometry( <span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('shapes - формы')" onmouseout="hide()">shapes</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - число сегментов кривой')" onmouseout="hide()">curveSegments</a></span> )</pre>
<div class=list><tt>shapes</tt> — массив форм или одиночная <a href="extras.htm#3.6" onmouseover="show('Shape')" onmouseout="hide()">форма</a>.</div>
<div class=list><tt>curveSegments</tt> — число сегментов в форме - значение по умолчанию равно <tt>12</tt></div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/ShapeGeometry.js" target="_blank">ShapeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="30">SphereBufferGeometry</h3>
This is the <a href="core.htm#2" title="BufferGeometry">BufferGeometry</a> port of <a href="#28" title="SphereGeometry">SphereGeometry</a>.<br>
<div class="caption"><img src="img/SphereGeometry.png" width=450><br>Сфера</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.SphereBufferGeometry( 5, 32, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var sphere = new THREE.Mesh( geometry, material );
scene.add( sphere );</pre>

<h4>Конструктор</h4>
<pre>SphereBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - ширина сегментов')" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - высота сегментов')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi start - ')" onmouseout="hide()">phiStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi length - ')" onmouseout="hide()">phiLength</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - ')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - ')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус сферы, значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>widthSegments</tt> — количество горизонтальных сегментов. Минимальное значение равно&nbsp;<tt>3</tt>, значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — количество вертикальных сегментов.
Минимальное значение равно&nbsp;<tt>2</tt>, значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt>phiStart</tt> — specify horizontal starting angle. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>phiLength</tt> — specify horizontal sweep angle size. Значение по умолчанию равно&nbsp;<tt>Math.PI * 2</tt>.</div>
<div class=list><tt>thetaStart</tt> — specify vertical starting angle. Значение по умолчанию равно&nbsp;<tt>0</tt>.</div>
<div class=list><tt>thetaLength</tt> — specify vertical sweep angle size. Значение по умолчанию равно&nbsp;<tt>Math.PI</tt>.</div>
The geometry is created by sweeping and calculating vertexes around the Y axis (horizontal sweep) and the Z axis (vertical sweep). Thus, incomplete spheres (akin to <em>'sphere slices'</em>) can be created through the use of different values of phiStart, phiLength, thetaStart and thetaLength, in order to define the points in which we start (or end) calculating those vertices.<br><br>

<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/tree/dev/src/geometries/SphereBufferGeometry.js" target="_blank">SphereBufferGeometry.js на Гитхабе</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="31">SphereGeometry (геометрия сферы)</h3>
Класс для генерации сферической геометрии.<br>
<div class="caption"><img src="img/SphereGeometry.png" width=450><br>Сфера</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.SphereGeometry( 5, 32, 32 );
var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );
var sphere = new THREE.Mesh( geometry, material );
scene.add( sphere );</pre>

<h4>Конструктор</h4>
<pre>SphereGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('width segments - ширина сегментов')" onmouseout="hide()">widthSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height segments - высота сегментов')" onmouseout="hide()">heightSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi start - ')" onmouseout="hide()">phiStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('phi length - ')" onmouseout="hide()">phiLength</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta start - ')" onmouseout="hide()">thetaStart</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('theta length - ')" onmouseout="hide()">thetaLength</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус сферы, значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>widthSegments</tt> — количество горизонтальных сегментов. Минимальное значение равно&nbsp;<tt>3</tt>, значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>heightSegments</tt> — количество вертикальных сегментов.
Минимальное значение равно&nbsp;<tt>2</tt>, значение по умолчанию равно&nbsp;<tt>6</tt>.</div>
<div class=list><tt>phiStart</tt> — устанавливает начальный угол по горизонтали specify horizontal starting angle, значение по умолчанию равно 0.</div>
<div class=list><tt>phiLength</tt> — определяет размер угла ометания по горизонтали specify horizontal sweep angle size, значение по умолчанию равно Math.PI * 2.</div>
<div class=list><tt>thetaStart</tt> — specify vertical starting angle, значение по умолчанию равно 0.</div>
<div class=list><tt>thetaLength</tt> — specify vertical sweep angle size, значение по умолчанию равно Math.PI.</div>
Геометрия создается путем обхода и вычисления вершин вокруг оси Y (горизонтальный обход) и оси Z (вертикальный обход).
Таким образом, неполные сферы (вроде <em>'ломтиков или кусков сферы'</em> - sphere slices) могут быть созданы через использование разных значений <tt>phiStart</tt>, <tt>phiLength</tt>, <tt>thetaStart</tt> и <tt>thetaLength</tt>, для определения точек, с которых начинается (или заканчивается) вычисление этих вершин.
The geometry is created by sweeping and calculating vertexes around the Y axis (horizontal sweep) and the Z axis (vertical sweep). Thus, incomplete spheres (akin to <em>'sphere slices'</em>) can be created through the use of different values of phiStart, phiLength, thetaStart and thetaLength, in order to define the points in which we start (or end) calculating those vertices.<br><br>

<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/tree/dev/src/geometries/SphereGeometry.js" target="_blank">SphereGeometry.js на Гитхабе</a></div><br><br>


<span class="right_side"><a href="#22" title="Переход к родительскому классу"><tt>PolyhedronBufferGeometry &rarr;</tt></a></span>
<h3 id="32">TetrahedronBufferGeometry</h3>
Класс для создания геометрии тетраэдра (четырехгранника).
<div class="caption"><img src="img/TetrahedronGeometry.png" width=300><br>Tetrahedron</div><br>

<h4>Конструктор</h4>
<pre>TetrahedronBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тетраэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не тетраэдр.</div>
Например, вот <tt>detail</tt> равен&nbsp;<tt>3</tt>.
<div class="caption"><img src="img/TetrahedronGeometry1.png" width="300"></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="32parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для создания геометрического элемента.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TetrahedronGeometry.js" target="_blank">TetrahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="33">TetrahedronGeometry</h3>
Класс для создания геометрии тетраэдра (четырехгранника).
<div class="caption"><img src="img/TetrahedronGeometry.png" width=300><br>Tetrahedron</div><br>

<h4>Конструктор</h4>
<pre>TetrahedronGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('detail - части')" onmouseout="hide()">detail</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тетраэдра. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>detail</tt> — Значение по умолчанию равно&nbsp;<tt>0</tt>. Установка здесь значения большего&nbsp;<tt>0</tt>, добавит вершин и это будет уже не тетраэдр.</div>
Например, вот <tt>detail</tt> равен&nbsp;<tt>3</tt>.
<div class="caption"><img src="img/TetrahedronGeometry1.png" width="300"></div><br>

<h4>Свойства</h4>
<div class=blockindent><br>
<pre id="33parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, которые были использованы для создания геометрического элемента.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TetrahedronGeometry.js" target="_blank">TetrahedronGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#13" title="Переход к родительскому классу"><tt>ExtrudeBufferGeometry &rarr;</tt></a></span>
<h3 id="34">TextBufferGeometry</h3>
Класс для создания текста как отдельного геометрического элемента. Он строится по предоставлению строки текста и набора параметров,
состоящих из загруженного <a href="extras.htm#3.3" onmouseover="show('Font')" onmouseout="hide()">шрифта</a> и настроек родительского класса <a href="#13">ExtrudeBufferGeometry</a>.
Дополнительные сведения смотрите в описании <a href="extras.htm#3.3" onmouseover="show('Font')" onmouseout="hide()">Font</a>, <a href="loaders.htm#9" onmouseover="show('FontLoader')" onmouseout="hide()">FontLoader</a>
и <a href="intro.htm#7" onmouseover="show('Creating_Text')" onmouseout="hide()">Создание текста</a>.
<div class="caption"><img src="img/TextGeometry.png" width=650><br>Text</div><br>

<h4>Пример</h4>
<pre>var loader = new THREE.FontLoader();<br>
loader.load( 'fonts/helvetiker_regular.typeface.json', function ( font ) {<br>
  var geometry = new THREE.TextBufferGeometry( 'Hello three.js!', {
    font: font,
    size: 80,
    height: 5,
    curveSegments: 12,
    bevelEnabled: true,
    bevelThickness: 10,
    bevelSize: 8,
    bevelSegments: 5
  } );
} );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_geometry_text" target="_blank">geometry / text</a></pre><br>

<h4>Конструктор</h4><br>
<pre>TextBufferGeometry( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span> )</pre>
<div class=list><tt>text</tt> — текст, который требуется показать.</div>
<div class=list><tt>parameters</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick('THREE.Font')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('font - шрифт')" onmouseout="hide()">font</a></span></tt> — экземпляр THREE.Font.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('size - размер')" onmouseout="hide()">size</a></span></tt>
— размер текста. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span></tt>
— толщина выдавленного текста.  Значение по умолчанию равно&nbsp;<tt>50</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - ')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - ')" onmouseout="hide()">bevelEnabled</a></span></tt>
— включает фаску (скос). Значением по умолчанию является <tt>false</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко в тексте снимается фаска. Значение по умолчанию равно&nbsp;<tt>10</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер фаски (скоса)')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выступает фаска из текста. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты фаски')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество сегментов (слоев) фаски (скоса). Значение по умолчанию равно&nbsp;<tt>3</tt>.</div></div><br>

<h4>Доступные шрифты</h4>
<tt>TextGeometry</tt> использует шрифты, сгенерированные <a href='http://gero3.github.io/facetype.js/' target="_blank">typeface.json</a>.<br>
Несколько имеющихся шрифтов можно найти в <b>/examples/fonts</b> и они должны быть включены в коде страницы.
<table class="tbl_1" border="1" cellpadding="5">
<tr class="head"><td>Font<br>шрифт</td><td>Weight<br>плотность</td><td>Style<br>стиль</td><td>File Path<br>путь к файлу</td></tr>
<tr><td>helvetiker</td><td>normal</td><td>normal</td><td>/examples/fonts/helvetiker_regular.typeface.json</td></tr>
<tr><td>helvetiker</td><td>bold</td><td>normal</td><td>/examples/fonts/helvetiker_bold.typeface.json</td></tr>
<tr><td>optimer</td><td>normal</td><td>normal</td><td>/examples/fonts/optimer_regular.typeface.json</td></tr>
<tr><td>optimer</td><td>bold</td><td>normal</td><td>/examples/fonts/optimer_bold.typeface.json</td></tr>
<tr><td>gentilis</td><td>normal</td><td>normal</td><td>/examples/fonts/gentilis_regular.typeface.json</td></tr>
<tr><td>gentilis</td><td>bold</td><td>normal</td><td>/examples/fonts/gentilis_bold.typeface.json</td></tr>
<tr><td>droid sans</td><td>normal</td><td>normal</td><td>/examples/fonts/droid/droid_sans_regular.typeface.json</td></tr>
<tr><td>droid sans</td><td>bold</td><td>normal</td><td>/examples/fonts/droid/droid_sans_bold.typeface.json</td></tr>
<tr><td>droid serif</td><td>normal</td><td>normal</td><td>/examples/fonts/droid/droid_serif_regular.typeface.json</td></tr>
<tr><td>droid serif</td><td>bold</td><td>normal</td><td>/examples/fonts/droid/droid_serif_bold.typeface.json</td></tr></table><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TextGeometry.js" target="_blank">TextGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="#12" title="Переход к родительскому классу"><tt>ExtrudeGeometry &rarr;</tt></a></span>
<h3 id="35">TextGeometry</h3>
Класс для создания текста как отдельного геометрического элемента. Он строится по предоставлению строки текста и набора параметров,
состоящих из загруженного <a href="extras.htm#3.3" onmouseover="show('Font')" onmouseout="hide()">шрифта</a> и настроек родительского класса <a href="#12">ExtrudeGeometry</a>.
Дополнительные сведения смотрите в описании <a href="extras.htm#3.3" onmouseover="show('Font')" onmouseout="hide()">Font</a>, <a href="loaders.htm#9" onmouseover="show('FontLoader')" onmouseout="hide()">FontLoader</a>
и <a href="intro.htm#7" onmouseover="show('Creating_Text')" onmouseout="hide()">Создание текста</a>.
<div class="caption"><img src="img/TextGeometry.png" width=650><br>Text</div><br>

<h4>Пример</h4>
<pre>var loader = new THREE.FontLoader();<br>
loader.load( 'fonts/helvetiker_regular.typeface.json', function ( font ) {<br>
  var geometry = new THREE.TextGeometry( 'Hello three.js!', {
    font: font,
    size: 80,
    height: 5,
    curveSegments: 12,
    bevelEnabled: true,
    bevelThickness: 10,
    bevelSize: 8,
    bevelSegments: 5
  } );
} );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_geometry_text" target="_blank">geometry / text</a></pre><br>

<h4>Конструктор</h4>
<pre>TextGeometry( <span onclick="showClick(type_string)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('text - текст')" onmouseout="hide()">text</a></span>, <span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span> )</pre>
<div class=list><tt>text</tt> — текст, который требуется показать.</div>
<div class=list><tt>parameters</tt> — объект, который может содержать следующие параметры:</div>
<div class=blockindent>
<div class=list><tt><span onclick="showClick('THREE.Font')"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('font - шрифт')" onmouseout="hide()">font</a></span></tt> — экземпляр THREE.Font.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('size - размер')" onmouseout="hide()">size</a></span></tt>
— размер текста. Значение по умолчанию равно&nbsp;<tt>100</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('height - высота')" onmouseout="hide()">height</a></span></tt>
— толщина выдавленного текста.  Значение по умолчанию равно&nbsp;<tt>50</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('curve segments - ')" onmouseout="hide()">curveSegments</a></span></tt>
— количество точек на кривых. Значение по умолчанию равно&nbsp;<tt>12</tt>.</div>
<div class=list><tt><span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel enabled - ')" onmouseout="hide()">bevelEnabled</a></span></tt>
— включает фаску (скос). Значением по умолчанию является <tt>false</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel thickness - толщина фаски')" onmouseout="hide()">bevelThickness</a></span></tt>
— насколько глубоко в тексте снимается фаска. Значение по умолчанию равно&nbsp;<tt>10</tt>.</div>
<div class=list><tt><span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel size - размер фаски (скоса)')" onmouseout="hide()">bevelSize</a></span></tt>
— насколько далеко выступает фаска из текста. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt><span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('bevel segments - сегменты фаски')" onmouseout="hide()">bevelSegments</a></span></tt>
— количество сегментов (слоев) фаски (скоса). Значение по умолчанию равно&nbsp;<tt>3</tt>.</div></div><br>

<h4>Доступные шрифты</h4>
<tt>TextGeometry</tt> использует шрифты, сгенерированные <a href='http://gero3.github.io/facetype.js/' target="_blank">typeface.json</a>.<br>
Несколько имеющихся шрифтов можно найти в <b>/examples/fonts</b> и они должны быть включены в коде страницы.
<table class="tbl_1" border="1" cellpadding="5">
<tr class="head"><td>Font<br>шрифт</td><td>Weight<br>плотность</td><td>Style<br>стиль</td><td>File Path<br>путь к файлу</td></tr>
<tr><td>helvetiker</td><td>normal</td><td>normal</td><td>/examples/fonts/helvetiker_regular.typeface.json</td></tr>
<tr><td>helvetiker</td><td>bold</td><td>normal</td><td>/examples/fonts/helvetiker_bold.typeface.json</td></tr>
<tr><td>optimer</td><td>normal</td><td>normal</td><td>/examples/fonts/optimer_regular.typeface.json</td></tr>
<tr><td>optimer</td><td>bold</td><td>normal</td><td>/examples/fonts/optimer_bold.typeface.json</td></tr>
<tr><td>gentilis</td><td>normal</td><td>normal</td><td>/examples/fonts/gentilis_regular.typeface.json</td></tr>
<tr><td>gentilis</td><td>bold</td><td>normal</td><td>/examples/fonts/gentilis_bold.typeface.json</td></tr>
<tr><td>droid&nbsp;sans</td><td>normal</td><td>normal</td><td>/examples/fonts/droid/droid_sans_regular.typeface.json</td></tr>
<tr><td>droid&nbsp;sans</td><td>bold</td><td>normal</td><td>/examples/fonts/droid/droid_sans_bold.typeface.json</td></tr>
<tr><td>droid&nbsp;serif</td><td>normal</td><td>normal</td><td>/examples/fonts/droid/droid_serif_regular.typeface.json</td></tr>
<tr><td>droid&nbsp;serif</td><td>bold</td><td>normal</td><td>/examples/fonts/droid/droid_serif_bold.typeface.json</td></tr></table><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TextGeometry.js" target="_blank">TextGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="36">TorusBufferGeometry</h3>
Это перенос <a href="#37" onmouseover="show('TorusGeometry');" onmouseout="hide()">TorusGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/TorusGeometry.png" width=400><br>Тор</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.TorusBufferGeometry( 10, 3, 16, 100 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var torus = new THREE.Mesh( geometry, material );
scene.add( torus );</pre>

<h4>Конструктор</h4>
<pre>TorusBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tube - труба')" onmouseout="hide()">tube</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radial segments - радиальные сегменты')" onmouseout="hide()">radialSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты по длине трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('arc - дуга')" onmouseout="hide()">arc</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тора, от центра тора до центра трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>tube</tt> — радиус трубы. Значение по умолчанию равно&nbsp;<tt>0.4</tt>.</div>
<div class=list><tt>radialSegments</tt> — радиальные сегменты. Значение по умолчанию равно&nbsp;<tt>8</tt>. Чем больше это значение, тем ближе к окружности сечение трубы, из которой сделано кольцо тора.</div>
<div class=list><tt>tubularSegments</tt> — сегменты по длине трубы. Значение по умолчанию равно&nbsp;<tt>6</tt>. Чем больше это значение, тем ближе к окружности кольцо тора.</div>
<div class=list><tt>arc</tt> — центральный угол. Значение по умолчанию равно&nbsp;<tt>Math.PI * 2</tt>. При меньших значениях кольцо тора будет не замкнуто.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js" target="_blank">TorusGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="37">TorusGeometry</h3>
Класс для построения геометрических фигур в виде тора.
<div class="caption"><img src="img/TorusGeometry.png" width=400><br>Тор</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.TorusGeometry( 10, 3, 16, 100 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var torus = new THREE.Mesh( geometry, material );
scene.add( torus );</pre>

<h4>Конструктор</h4>
<pre>TorusGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tube - труба')" onmouseout="hide()">tube</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radial segments - радиальные сегменты')" onmouseout="hide()">radialSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты по длине трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('arc - дуга')" onmouseout="hide()">arc</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тора, от центра тора до центра трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>tube</tt> — радиус трубы. Значение по умолчанию равно&nbsp;<tt>0.4</tt>.</div>
<div class=list><tt>radialSegments</tt> — радиальные сегменты. Значение по умолчанию равно&nbsp;<tt>8</tt>. Чем больше это значение, тем ближе к окружности сечение трубы, из которой сделано кольцо тора.</div>
<div class=list><tt>tubularSegments</tt> — сегменты по длине трубы. Значение по умолчанию равно&nbsp;<tt>6</tt>. Чем больше это значение, тем ближе к окружности кольцо тора.</div>
<div class=list><tt>arc</tt> — центральный угол. Значение по умолчанию равно&nbsp;<tt>Math.PI * 2</tt>. При меньших значениях кольцо тора будет не замкнуто.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js" target="_blank">TorusGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="38">TorusKnotBufferGeometry</h3>
Это перенос <a href="#39" onmouseover="show('TorusKnotGeometry');" onmouseout="hide()">TorusKnotGeometry</a> в <a href="core.htm#2" onmouseover="show('BufferGeometry');" onmouseout="hide()">BufferGeometry</a>.
<div class="caption"><img src="img/TorusKnotGeometry.png" width=500><br>
Тор с узлом</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.TorusKnotBufferGeometry( 10, 3, 100, 16 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var torusKnot = new THREE.Mesh( geometry, material );
scene.add( torusKnot );</pre>

<h4>Конструктор</h4>
<pre>TorusKnotBufferGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tube - труба')" onmouseout="hide()">tube</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты по длине трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radial segments - радиальные сегменты')" onmouseout="hide()">radialSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('p - ')" onmouseout="hide()">p</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('q - ')" onmouseout="hide()">q</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тора, от центра тора до центра трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>tube</tt> — радиус трубы. Значение по умолчанию равно&nbsp;<tt>0.4</tt>.</div>
<div class=list><tt>tubularSegments</tt> — сегменты по длине трубы. Значение по умолчанию равно&nbsp;<tt>64</tt>. Чем больше это значение, тем ближе к окружности кольцо тора.</div>
<div class=list><tt>radialSegments</tt> — радиальные сегменты. Значение по умолчанию равно&nbsp;<tt>8</tt>. Чем больше это значение, тем ближе к окружности сечение трубы, из которой сделано кольцо тора.</div>
<div class=list><tt>p</tt> — данное значение определяет, сколько оборотов делает этот геометрический элемент вокруг своей центральной оси. Значение по умолчанию равно&nbsp;<tt>2</tt>.</div>
<div class=list><tt>q</tt> — данное значение определяет, сколько оборотов делает этот геометрический элемент внутри тора, вокруг осевой окружности трубы (кольца) тора. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusKnotGeometry.js" target="_blank">TorusKnotGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="39">TorusKnotGeometry</h3>
Это геометрический объект в виде тора с узлом, конкретная форма которого определяется парой <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B7%D0%B0%D0%B8%D0%BC%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D1%81%D1%82%D1%8B%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%B0" target="_blank" title="Целые числа называются взаимно простыми, если они не имеют никаких общих делителей, кроме ±1.">взаимно простых целых чисел</a>, <tt>p</tt> и <tt>q</tt>. Если значения <tt>p</tt> и <tt>q</tt> не взаимно простые, получится тороидное звено.
<div class="caption"><img src="img/TorusKnotGeometry.png" width=500><br>
Тор с узлом</div><br>

<h4>Пример</h4>
<pre>var geometry = new THREE.TorusKnotGeometry( 10, 3, 100, 16 );
var material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );
var torusKnot = new THREE.Mesh( geometry, material );
scene.add( torusKnot );</pre>

<h4>Конструктор</h4>
<pre>TorusKnotGeometry( <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tube - труба')" onmouseout="hide()">tube</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты по длине трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radial segments - радиальные сегменты')" onmouseout="hide()">radialSegments</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('p - ')" onmouseout="hide()">p</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('q - ')" onmouseout="hide()">q</a></span> )</pre>
<div class=list><tt>radius</tt> — радиус тора, от центра тора до центра трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>tube</tt> — радиус трубы, из которой сделан тор. Значение по умолчанию равно&nbsp;<tt>0.4</tt>.</div>
<div class=list><tt>tubularSegments</tt> — сегменты по длине трубы. Значение по умолчанию равно&nbsp;<tt>64</tt>. Чем больше это значение, тем ближе к окружности кольцо тора.</div>
<div class=list><tt>radialSegments</tt> — радиальные сегменты. Значение по умолчанию равно&nbsp;<tt>8</tt>.
Чем больше это значение, тем ближе к окружности сечение трубы, из которой сделано кольцо тора (т.е. при значении 3 - труба в сечении будет треугольной, при 4 - квадратной и т.д.).</div>
<div class=list><tt>p</tt> — данное значение определяет, сколько оборотов делает этот геометрический элемент вокруг своей центральной оси. Значение по умолчанию равно&nbsp;<tt>2</tt>.</div>
<table align=center><tr><td><img src="img/p1.png" width=100><br><div class="caption">p=1, q=1</div></td>
<td><img src="img/p2.png" width=100><br><div class="caption">p=2, q=1</div></td>
<td><img src="img/p3.png" width=100><br><div class="caption">p=3, q=1</div></td>
<td><img src="img/p4.png" width=100><br><div class="caption">p=4, q=1</div></td></table>
<div class=list><tt>q</tt> — данное значение определяет, сколько оборотов делает этот геометрический элемент внутри тора, вокруг осевой окружности трубы (кольца) тора. Значение по умолчанию равно&nbsp;<tt>3</tt>.</div>
<table align=center><tr><td><img src="img/p1.png" width=100><br><div class="caption">p=1, q=1</div></td>
<td><img src="img/q2.png" width=100><br><div class="caption">p=1, q=2</div></td>
<td><img src="img/q3.png" width=100><br><div class="caption">p=1, q=3</div></td>
<td><img src="img/q4.png" width=100><br><div class="caption">p=1, q=4</div></td></table><br>
<script language="javascript">document.write (prop_1);</script>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusKnotGeometry.js" target="_blank">TorusKnotGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="40">TubeBufferGeometry</h3>
Создает трубу, вытянутую вдоль трехмерной кривой линии.<br>
<div class="caption"><img src="img/TubeGeometry.png" width=300><br>Труба</div><br>

<h4>Пример</h4>
<pre>function CustomSinCurve( scale ) {
  THREE.Curve.call( this );
  this.scale = ( scale === undefined ) ? 1 : scale;
}<br>
CustomSinCurve.prototype = Object.create( THREE.Curve.prototype );
CustomSinCurve.prototype.constructor = CustomSinCurve;
CustomSinCurve.prototype.getPoint = function ( t ) {
  var tx = t * 3 - 1.5;
  var ty = Math.sin( 2 * Math.PI * t );
  var tz = 0;
  return new THREE.Vector3( tx, ty, tz ).multiplyScalar( this.scale );
};<br>
var path = new CustomSinCurve( 10 );
var geometry = new THREE.TubeBufferGeometry( path, 20, 2, 8, false );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre><br>

<h4>Конструктор</h4>
<pre>TubeBufferGeometry( <a href="extras.htm#3.1" onmouseover="show('Curve.<br>path - путь, контур')" onmouseout="hide()">path</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - радиальные сегменты')" onmouseout="hide()">radiusSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('closed - закрыто')" onmouseout="hide()">closed</a></span> )</pre>
<div class=list><tt>path</tt> — путь или траектория, наследуемая от базового класса <a href="extras.htm#3.1" onmouseover="show('Curve')" onmouseout="hide()">Curve</a>.</div>
<div class=list><tt>tubularSegments</tt> — число сегментов по длине трубы. Значение по умолчанию равно&nbsp;<tt>64</tt>.</div>
<div class=list><tt>radius</tt> — радиус трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов поперечного сечения трубы т.е. при значении 3 - труба в сечении будет треугольной, при 4 - квадратной и т.д. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>closed</tt> — определяет, открыта или закрыта труба. Значением по умолчанию является <tt>false</tt>.</div><br>

<h4>Свойства</h4>
<div class=note_trans><b>Примечание переводчика:</b> Прямая, перпендикулярная касательной и проходящая через точку касания, называется нормалью к кривой.
Плоскость, перпендикулярная касательной в данной точке кривой, называется нормальной плоскостью; все нормали для данной точки лежат в нормальной плоскости.
Нормаль, лежащую в соприкасающейся плоскости, называют главной нормалью, а нормаль, перпендикулярная соприкасающейся плоскости, называется бинормалью.</div>
<div class=blockindent><br>
<pre id="40parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, использованными при создании данного геометрического элемента.<br><br>

<pre id="40tangents"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tangents - касательные')" onmouseout="hide()">.tangents</a></span></pre>
Массив касательных (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).<br><br>

<pre id="40normals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normals - нормали')" onmouseout="hide()">.normals</a></span></pre>
Массив нормалей (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).<br><br>

<pre id="40binormals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('binormals - бинормали')" onmouseout="hide()">.binormals</a></span></pre>
Массив бинормалей (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TubeGeometry.js" target="_blank">TubeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#6" title="Переход к родительскому классу"><tt>Geometry &rarr;</tt></a></span>
<h3 id="41">TubeGeometry</h3>
Создает трубу, вытянутую вдоль трехмерной кривой линии.<br>
<div class="caption"><img src="img/TubeGeometry.png" width=300><br>Труба</div><br>

<h4>Пример</h4>
<pre>function CustomSinCurve( scale ) {
  THREE.Curve.call( this );
  this.scale = ( scale === undefined ) ? 1 : scale;
}<br>
CustomSinCurve.prototype = Object.create( THREE.Curve.prototype );
CustomSinCurve.prototype.constructor = CustomSinCurve;
CustomSinCurve.prototype.getPoint = function ( t ) {
  var tx = t * 3 - 1.5;
  var ty = Math.sin( 2 * Math.PI * t );
  var tz = 0;
  return new THREE.Vector3( tx, ty, tz ).multiplyScalar( this.scale );
};<br>
var path = new CustomSinCurve( 10 );
var geometry = new THREE.TubeGeometry( path, 20, 2, 8, false );
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );</pre><br>

<h4>Конструктор</h4>
<pre>TubeGeometry( <a href="extras.htm#3.1" onmouseover="show('Curve.<br>path - путь, контур')" onmouseout="hide()">path</a>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tubular segments - сегменты трубы')" onmouseout="hide()">tubularSegments</a></span>, <span onclick="showClick(type_float)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius - радиус')" onmouseout="hide()">radius</a></span>, <span onclick="showClick(type_int)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('radius segments - радиальные сегменты')" onmouseout="hide()">radiusSegments</a></span>, <span onclick="showClick(type_bool)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('closed - закрыто')" onmouseout="hide()">closed</a></span> )</pre>
<div class=list><tt>path</tt> — путь или траектория, наследуемая от базового класса <a href="extras.htm#3.1" onmouseover="show('Curve')" onmouseout="hide()">Curve</a>.</div>
<div class=list><tt>tubularSegments</tt> — число сегментов по длине трубы. Значение по умолчанию равно&nbsp;<tt>64</tt>.</div>
<div class=list><tt>radius</tt> — радиус трубы. Значение по умолчанию равно&nbsp;<tt>1</tt>.</div>
<div class=list><tt>radiusSegments</tt> — число сегментов поперечного сечения трубы т.е. при значении 3 - труба в сечении будет треугольной, при 4 - квадратной и т.д. Значение по умолчанию равно&nbsp;<tt>8</tt>.</div>
<div class=list><tt>closed</tt> — определяет, открыта или закрыта труба. Значением по умолчанию является <tt>false</tt>.</div><br>

<h4>Свойства</h4>
<div class=note_trans><b>Примечание переводчика:</b> Прямая, перпендикулярная касательной и проходящая через точку касания, называется нормалью к кривой.
Плоскость, перпендикулярная касательной в данной точке кривой, называется нормальной плоскостью; все нормали для данной точки лежат в нормальной плоскости.
Нормаль, лежащую в соприкасающейся плоскости, называют главной нормалью, а нормаль, перпендикулярная соприкасающейся плоскости, называется бинормалью.</div>
<div class=blockindent><br>
<pre id="41parameters"><span onclick="showClick(type_obj)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('parameters - параметры')" onmouseout="hide()">.parameters</a></span></pre>
Объект со всеми параметрами, использованными при создании данного геометрического элемента.<br><br>

<pre id="41tangents"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('tangents - касательные')" onmouseout="hide()">.tangents</a></span></pre>
Массив касательных (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).<br><br>

<pre id="41normals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('normals - нормали')" onmouseout="hide()">.normals</a></span></pre>
Массив нормалей (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).<br><br>

<pre id="41binormals"><span onclick="showClick(type_array)"><a href="#" onclick="return false" onblur="hideClick()" onmouseover="show('binormals - бинормали')" onmouseout="hide()">.binormals</a></span></pre>
Массив бинормалей (<a href="math.htm#19" onmouseover="show('Vector3')" onmouseout="hide()">Vector3</a>).</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/TubeGeometry.js" target="_blank">TubeGeometry.js на github.com</a></div><br><br>


<span class="right_side"><a href="core.htm#2" title="Переход к родительскому классу"><tt>BufferGeometry &rarr;</tt></a></span>
<h3 id="42">WireframeGeometry</h3>
Этот геометрический объект можно использовать в качестве вспомогательного для просмотра любого объекта <a href="core.htm#7" onmouseover="show('Geometry')" onmouseout="hide()">Geometry</a> в виде каркаса (wireframe).<br><br>

<h4>Пример</h4><br>
<pre>var geometry = new THREE.SphereBufferGeometry( 100, 100, 100 );<br>
var wireframe = new THREE.WireframeGeometry( geometry );<br>
var line = new THREE.LineSegments( wireframe );
line.material.depthTest = false;
line.material.opacity = 0.25;
line.material.transparent = true;<br>
scene.add( line );</pre>
<h5>Другие примеры:</h5>
<pre><a href="https://threejs.org/examples/#webgl_helpers" target="_blank">helpers</a></pre><br>

<h4>Конструктор</h4><br>
<pre>WireframeGeometry( <a href="core.htm#7" onmouseover="show('Geometry')" onmouseout="hide()">geometry</a> )</pre>
<div class=list><tt>geometry</tt> — любой геометрический объект.</div><br>

<h4>Исходники</h4>
<div class=blockindent><a href="https://github.com/mrdoob/three.js/blob/master/src/geometries/WireframeGeometry.js" target="_blank">WireframeGeometry.js на github.com</a></div><br><br>

<br><br>
</body></html>
